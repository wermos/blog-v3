---
import { Image } from 'astro:assets'
import rehypeMathjax from 'rehype-mathjax/browser'
import rehypeStringify from 'rehype-stringify'
import remarkMath from 'remark-math'
import remarkParse from 'remark-parse'
import remarkRehype from 'remark-rehype'
import { unified } from 'unified'

interface FigureImageProps {
  caption?: string
  figureClass?: string
  captionClass?: string
  [key: string]: unknown
}

const {
  caption,
  figureClass,
  captionClass = 'text-center mt-2 text-sm text-muted-foreground',
  ...imageProps
} = Astro.props as FigureImageProps

let processedCaption = ''
if (caption) {
  const processor = unified()
    .use(remarkParse) // Parses markdown
    .use(remarkMath) // Identifies math syntax
    .use(remarkRehype) // Converts remark tree to rehype tree
    .use(rehypeMathjax) // Processes math in rehype tree
    .use(rehypeStringify) // Converts rehype tree to HTML string

  const result = await processor.process(caption)
  processedCaption = String(result)
}
---

<figure class={figureClass}>
  <Image {...imageProps as any} />
  {caption && <figcaption class={captionClass} set:html={processedCaption} />}
</figure>
