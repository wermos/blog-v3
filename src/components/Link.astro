---
import { cn } from '@/lib/utils'

interface Props {
  href: string
  external?: boolean
  class?: string
  underline?: boolean
  [key: string]: any
}

const { href, external, class: className, underline, ...rest } = Astro.props

// Handle base path for all internal links
const baseUrl = import.meta.env.BASE_URL || '/'
const isExternal =
  external ||
  href.startsWith('http') ||
  href.startsWith('mailto:') ||
  href.startsWith('tel:') ||
  href.startsWith('#')

const finalHref = isExternal
  ? href // External links and anchors stay as-is
  : href.startsWith('/')
    ? `${baseUrl.replace(/\/$/, '')}${href}` // Absolute internal links get base path
    : `${baseUrl.replace(/\/$/, '')}/${href}` // Relative links also get base path
---

<a
  href={finalHref}
  target={isExternal ? '_blank' : '_self'}
  class={cn(
    'inline-block transition-colors duration-300 ease-in-out',
    underline &&
      'underline decoration-muted-foreground underline-offset-[3px] hover:decoration-foreground',
    className,
  )}
  {...rest}
>
  <slot />
</a>
